<!DOCTYPE html>
<html>
  <head>
    <title><%- title %></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `link` tags, or asynchronously
        on the client using a solution like AMD (RequireJS).  Or, if you like, you can
        take advantage of Sails' boilerplate asset management.

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically.  Both CSS (.css) and LESS (.less) are supported.
        In production, your styles will be minified and concatenated into a single file.

        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/linker/styles/bootstrap-theme.min.css">
    <link rel="stylesheet" href="/linker/styles/bootstrap.css">
    <link rel="stylesheet" href="/linker/styles/carousel.css">
    <link rel="stylesheet" href="/linker/styles/inspiral-custom.css">
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css" />
    <!--STYLES END-->

    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script src="/linker/js/paper.js"></script>
    <script type="text/paperscript" canvas="homepageCanvas">

      var colors = ['#FF6600', '#FF944D', '#FF7519', '#FF4719', '#FF6600', '#E68A00', '#FF4719', '#FF4719', '#E65C00', '#FF3300'];
      var radius, randomNum, circle, position;
      var numberCircles = 50;
      var radius = 50;
      var originalCircle = new Path.Circle({
          center: view.center,
          radius: 50,
          fillColor: 'red'
        });
      for (var i = 0; i <= numberCircles; i++) {
          position = view.center;
          radius += Math.round(Math.random() * 20);
          circle = new Path.Circle(new Point(position), radius);
          randomNum = Math.round(Math.random() * 10);
          circle.fillColor = colors[randomNum];
          circle.sendToBack();
        };

      function onFrame(event) {
          randomNum = Math.round(Math.random() * 10);
          originalCircle.fillColor.hue += 1;
      };

    </script>

  </head>

  <body>
    <%- body %>



    <!--
        Client-side Templates
        ========================

    		HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically.

        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your templates using a server-side stringfile
              before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/jst.js"></script>
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' boilerplate asset management.

      By default, filesin your `assets/linker/js` folder are included here
      automatically.  Both JavaScript (.js) and CoffeeScript (.coffee) are supported.
      In production, your scripts will be minified and concatenated into a single file.

      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->


    <!--SCRIPTS-->
    <script src="/linker/js/socket.io.js"></script>
    <script src="/linker/js/sails.io.js"></script>
    <script src="/linker/js/app.js"></script>
    <script src="/linker/js/jquery-2.1.0.js"></script>
    <script src="/linker/js/jquery.validate.min.js"></script>
    <script src="/linker/js/underscore-min.js"></script>
    <script src="/linker/js/masonry.pkgd.min.js"></script>
    <script src="/linker/js/bootstrap.min.js"></script>
    <script src="/linker/js/customValidate.js"></script>
    <script src="/linker/js/homepage_canvas_2.js"></script>
    <script src="/linker/js/inspire-custom.js"></script>
    <script src="/linker/js/nodemailer.js"></script>
    <script src="/linker/js/paper.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
